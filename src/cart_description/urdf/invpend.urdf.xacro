<?xml version="1.0"?>
<!-- Revolute-Revolute Manipulator -->
<robot name="invpend" xmlns:xacro="http://www.ros.org/wiki/xacro">

  <!-- Constants for robot dimensions -->
  <xacro:property name="PI" value="3.1415926535897931"/>
  <xacro:property name="mass_slider" value="10" /> <!-- arbitrary value for mass -->
  <xacro:property name="mass_cart" value="20.0" /> <!-- arbitrary value for mass -->
  <xacro:property name="mass_pole" value="2.0" /> <!-- arbitrary value for mass -->
  <xacro:property name="width" value="0.25" /> <!-- cart width -->
  <xacro:property name="height" value="0.125" /> <!-- cart height -->
  <xacro:property name="depth" value="0.25" /> <!-- cart depth -->
  <xacro:property name="length_slider" value="7" /> <!-- pole length -->
  <xacro:property name="length_pole" value="0.5" /> <!-- pole length -->
  <xacro:property name="radius" value="0.01" /> <!-- slender bar radius -->
  <xacro:property name="radius_pole" value="0.025" /> <!-- pole radius -->

  <!-- Include gazebo properties -->
  <xacro:include filename="invpend_gazebo.xacro"/>
  <!-- Import rviz colors -->
  <xacro:include filename="materials.xacro"/>

  <xacro:include filename="ros2_control.xacro"/>

  <!-- Used for fixing robot to Gazebo 'base_link' -->
  <link name="world"/>


  <joint name="fixed" type="fixed">
    <parent link="world"/>
    <child link="slidebar"/>
    <origin xyz="0 0 1"/>
  </joint>

  <!-- Slider Link -->
  <link name="slidebar">
    <visual>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
	<box size="${length_slider} ${radius} ${radius}"/>
      </geometry>
      <material name="black"/>
    </visual>

    <inertial>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <mass value="${mass_slider}"/>
      <inertia
	  ixx="${(1/12)*mass_slider*(radius*radius+radius*radius)}" ixy="0.0" ixz="0.0"
	  iyy="${(1/12)*mass_slider*(length_slider*length_slider+radius*radius)}" iyz="0.0"
	  izz="${(1/12)*mass_slider*(length_slider*length_slider+radius*radius)}"/>
    </inertial>
  </link>

  <joint name="slider_to_cart" type="prismatic">
    <parent link="slidebar"/>
    <child link="cart"/>
    <origin xyz="0 0 0" rpy="0 0 0"/>
    <axis xyz="1 0 0"/>
    <limit effort="100.0" lower="-3.5" upper="3.5" velocity="100.0"/>
    <dynamics damping="0.0" friction="0.5"/>
    <transmission name="transmission_slider">
      <type>transmission_interface/SimpleTransmission</type>
      <joint name="slider_to_cart">
        <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
      </joint>
      <actuator name="slider_motor">
        <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
        <mechanicalReduction>1</mechanicalReduction>
      </actuator>
    </transmission>
  </joint>

  <!-- Cart Link -->
  <link name="cart">
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
	<box size="${width} ${depth} ${height}"/>
      </geometry>
    </collision>

    <visual>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
	<box size="${width} ${depth} ${height}"/>	
      </geometry>
      <material name="blue"/>
    </visual>

    <inertial>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <mass value="${mass_cart}"/>
      <inertia
	  ixx="${(1/12)*mass_cart*(depth*depth+height*height)}" ixy="0.0" ixz="0.0"
	  iyy="${(1/12)*mass_cart*(width*width+height*height)}" iyz="0.0"
	  izz="${(1/12)*mass_cart*(width*width+depth*depth)}"/>
    </inertial>
  </link>

  <joint name="cart_to_pole" type="revolute">
    <parent link="cart"/>
    <child link="pole"/>
    <origin xyz="0 ${-depth/2-radius-radius_pole/2} ${height/4}" rpy="0 0 0"/>
    <axis xyz="0 1 0"/>
    <limit effort="100.0" lower="${-PI}" upper = "${PI}" velocity="100.0"/>
    <dynamics damping="0.0" friction="0.0"/>
  </joint>

  <!-- Pole Link -->
  <link name="pole">
    <collision>
      <origin xyz="0 0 ${length_pole/2}" rpy="0 0 0"/>
      <geometry>
	      <box size="${radius_pole} ${radius_pole} ${length_pole}"/>
      </geometry>
    </collision>

    <visual>
      <origin xyz="0 0 ${length_pole/2}" rpy="0 0 0"/>
      <geometry>
	      <box size="${radius_pole} ${radius_pole} ${length_pole}"/>
      </geometry>
      <material name="orange"/>
    </visual>

    <inertial>
      <origin xyz="0 0 ${length_pole/2}" rpy="0 0 0"/>
      <mass value="${mass_pole}"/>
      <inertia
	  ixx="${(1/12)*mass_pole*(radius_pole*radius_pole+length_pole*length_pole)}" ixy="0.0" ixz="0.0"
	  iyy="${(1/12)*mass_pole*(radius_pole*radius_pole+length_pole*length_pole)}" iyz="0.0"
	  izz="${(1/12)*mass_pole*(radius_pole*radius_pole+radius_pole*radius_pole)}"/>
    </inertial>
  </link>


</robot>
